{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arvind\\\\Documents\\\\code\\\\itemfinder\\\\part3\\\\supermarket-finder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue } from 'firebase/database';\n\n// Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAUjjIy9Sd5r8T5nxIinHbcseCvNHKKag4\",\n  authDomain: \"schoolbus-led.firebaseapp.com\",\n  databaseURL: \"https://schoolbus-led-default-rtdb.firebaseio.com\",\n  projectId: \"schoolbus-led\",\n  storageBucket: \"schoolbus-led.appspot.com\",\n  messagingSenderId: \"1056264797823\",\n  appId: \"YOUR_APP_ID\" // Replace with your app ID from Firebase project settings\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst App = () => {\n  _s();\n  const [authStatus, setAuthStatus] = useState('Checking...');\n  useEffect(() => {\n    // Check localStorage on mount\n    const storedStatus = localStorage.getItem('rfid-auth-status');\n    if (storedStatus) {\n      setAuthStatus(storedStatus);\n    }\n    const authRef = ref(database, 'rfid-auth-status');\n\n    // Listen for value changes in Firebase\n    const unsubscribe = onValue(authRef, snapshot => {\n      const status = snapshot.val();\n      const newStatus = status || 'No status';\n\n      // Update localStorage and state\n      localStorage.setItem('rfid-auth-status', newStatus);\n      setAuthStatus(newStatus);\n    });\n\n    // Handle storage event for other tabs\n    const handleStorageChange = event => {\n      if (event.key === 'rfid-auth-status') {\n        setAuthStatus(event.newValue || 'No status');\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n\n    // Cleanup on component unmount\n    return () => {\n      unsubscribe();\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RFID Authentication Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", authStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KocJbO3aryGFGcO9S5AytAqCPF8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","initializeApp","getDatabase","ref","onValue","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","App","_s","authStatus","setAuthStatus","storedStatus","localStorage","getItem","authRef","unsubscribe","snapshot","status","val","newStatus","setItem","handleStorageChange","event","key","newValue","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Arvind/Documents/code/itemfinder/part3/supermarket-finder/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue } from 'firebase/database';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAUjjIy9Sd5r8T5nxIinHbcseCvNHKKag4\",\n  authDomain: \"schoolbus-led.firebaseapp.com\",\n  databaseURL: \"https://schoolbus-led-default-rtdb.firebaseio.com\",\n  projectId: \"schoolbus-led\",\n  storageBucket: \"schoolbus-led.appspot.com\",\n  messagingSenderId: \"1056264797823\",\n  appId: \"YOUR_APP_ID\" // Replace with your app ID from Firebase project settings\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\nconst App = () => {\n  const [authStatus, setAuthStatus] = useState('Checking...');\n\n  useEffect(() => {\n    // Check localStorage on mount\n    const storedStatus = localStorage.getItem('rfid-auth-status');\n    if (storedStatus) {\n      setAuthStatus(storedStatus);\n    }\n\n    const authRef = ref(database, 'rfid-auth-status');\n    \n    // Listen for value changes in Firebase\n    const unsubscribe = onValue(authRef, (snapshot) => {\n      const status = snapshot.val();\n      const newStatus = status || 'No status';\n      \n      // Update localStorage and state\n      localStorage.setItem('rfid-auth-status', newStatus);\n      setAuthStatus(newStatus);\n    });\n\n    // Handle storage event for other tabs\n    const handleStorageChange = (event) => {\n      if (event.key === 'rfid-auth-status') {\n        setAuthStatus(event.newValue || 'No status');\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n\n    // Cleanup on component unmount\n    return () => {\n      unsubscribe();\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>RFID Authentication Status</h1>\n      <p>Status: {authStatus}</p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,WAAW,EAAEC,GAAG,EAAEC,OAAO,QAAQ,mBAAmB;;AAE7D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,WAAW,EAAE,mDAAmD;EAChEC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,2BAA2B;EAC1CC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE,aAAa,CAAC;AACvB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGd,aAAa,CAACM,cAAc,CAAC;AACzC,MAAMS,QAAQ,GAAGd,WAAW,CAACa,GAAG,CAAC;AAEjC,MAAME,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,aAAa,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACd;IACA,MAAMsB,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;IAC7D,IAAIF,YAAY,EAAE;MAChBD,aAAa,CAACC,YAAY,CAAC;IAC7B;IAEA,MAAMG,OAAO,GAAGrB,GAAG,CAACa,QAAQ,EAAE,kBAAkB,CAAC;;IAEjD;IACA,MAAMS,WAAW,GAAGrB,OAAO,CAACoB,OAAO,EAAGE,QAAQ,IAAK;MACjD,MAAMC,MAAM,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC7B,MAAMC,SAAS,GAAGF,MAAM,IAAI,WAAW;;MAEvC;MACAL,YAAY,CAACQ,OAAO,CAAC,kBAAkB,EAAED,SAAS,CAAC;MACnDT,aAAa,CAACS,SAAS,CAAC;IAC1B,CAAC,CAAC;;IAEF;IACA,MAAME,mBAAmB,GAAIC,KAAK,IAAK;MACrC,IAAIA,KAAK,CAACC,GAAG,KAAK,kBAAkB,EAAE;QACpCb,aAAa,CAACY,KAAK,CAACE,QAAQ,IAAI,WAAW,CAAC;MAC9C;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;;IAEvD;IACA,OAAO,MAAM;MACXN,WAAW,CAAC,CAAC;MACbU,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,mBAAmB,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzB,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjC,OAAA;MAAAiC,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCrC,OAAA;MAAAiC,QAAA,GAAG,UAAQ,EAACpB,UAAU;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAACzB,EAAA,CA5CID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}