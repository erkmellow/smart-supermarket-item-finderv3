{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arvind\\\\Documents\\\\code\\\\itemfinder\\\\part3\\\\supermarket-finder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { initializeApp } from 'firebase/app';\n// import { getDatabase, ref, onValue, set } from 'firebase/database';\n// import './App.css';\n\n// // Firebase configuration\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyAUjjIy9Sd5r8T5nxIinHbcseCvNHKKag4\",\n//   authDomain: \"schoolbus-led.firebaseapp.com\",\n//   databaseURL: \"https://schoolbus-led-default-rtdb.firebaseio.com\",\n//   projectId: \"schoolbus-led\",\n//   storageBucket: \"schoolbus-led.appspot.com\",\n//   messagingSenderId: \"1056264797823\",\n//   appId: \"1:1056264797823:web:ab123cd456ef7890ghij\" // Replace with your app ID from Firebase project settings\n// };\n\n// // Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const database = getDatabase(app);\n\n// function App() {\n//   const [ledStatus, setLedStatus] = useState('OFF');\n\n//   useEffect(() => {\n//     const ledRef = ref(database, 'test-led1');\n\n//     const ledUnsubscribe = onValue(ledRef, (snapshot) => {\n//       const status = snapshot.val();\n//       setLedStatus(status);\n//     });\n\n//     return () => {\n//       ledUnsubscribe();\n//     };\n//   }, []);\n\n//   const toggleLed = () => {\n//     const newStatus = ledStatus === 'ON' ? 'OFF' : 'ON';\n//     set(ref(database, 'test-led1'), newStatus);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"status-text\">LED is {ledStatus}</h1>\n//       <div \n//         className={`switch ${ledStatus === 'ON' ? 'switch-on' : 'switch-off'}`} \n//         onClick={toggleLed}\n//       >\n//         <div className={`circle ${ledStatus === 'ON' ? 'circle-on' : 'circle-off'}`} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\nimport './App.css';\n\n// Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAUjjIy9Sd5r8T5nxIinHbcseCvNHKKag4\",\n  authDomain: \"schoolbus-led.firebaseapp.com\",\n  databaseURL: \"https://schoolbus-led-default-rtdb.firebaseio.com\",\n  projectId: \"schoolbus-led\",\n  storageBucket: \"schoolbus-led.appspot.com\",\n  messagingSenderId: \"1056264797823\",\n  appId: \"1:1056264797823:web:ab123cd456ef7890ghij\" // Replace with your app ID from Firebase project settings\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nfunction App() {\n  _s();\n  const [ledStatus, setLedStatus] = useState('OFF');\n  const [authStatus, setAuthStatus] = useState('Not Authenticated');\n  const [isScanning, setIsScanning] = useState(false);\n  useEffect(() => {\n    const ledRef = ref(database, 'test-led1');\n    const ledUnsubscribe = onValue(ledRef, snapshot => {\n      const status = snapshot.val();\n      setLedStatus(status);\n    });\n    return () => {\n      ledUnsubscribe();\n    };\n  }, []);\n  const toggleLed = () => {\n    const newStatus = ledStatus === 'ON' ? 'OFF' : 'ON';\n    set(ref(database, 'test-led1'), newStatus);\n  };\n  const handleRFIDScan = () => {\n    setIsScanning(true);\n    // Simulate RFID scanning process\n    // In a real application, you would interact with a backend or device to handle RFID scanning\n    setTimeout(() => {\n      // Simulate an authenticated RFID tag\n      const simulatedUID = '12345678'; // Example UID\n\n      // Check RFID authentication (this should be handled by your backend or device in a real application)\n      authenticateRFID(simulatedUID);\n    }, 3000); // Simulate scanning delay\n  };\n  const authenticateRFID = uid => {\n    // Simulate authentication process\n    const acceptedUIDs = ['12345678', '87654321']; // Example accepted UIDs\n\n    if (acceptedUIDs.includes(uid)) {\n      setAuthStatus('Authenticated');\n    } else {\n      setAuthStatus('Authentication Failed');\n    }\n    setIsScanning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"status-text\",\n      children: [\"LED is \", ledStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `switch ${ledStatus === 'ON' ? 'switch-on' : 'switch-off'}`,\n      onClick: toggleLed,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle ${ledStatus === 'ON' ? 'circle-on' : 'circle-off'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRFIDScan,\n      children: isScanning ? 'Scanning...' : 'Scan RFID'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: authStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dDVF0TwYHy+cIGjn4Rzm0URqPzs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getDatabase","ref","onValue","set","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","App","_s","ledStatus","setLedStatus","authStatus","setAuthStatus","isScanning","setIsScanning","ledRef","ledUnsubscribe","snapshot","status","val","toggleLed","newStatus","handleRFIDScan","setTimeout","simulatedUID","authenticateRFID","uid","acceptedUIDs","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Arvind/Documents/code/itemfinder/part3/supermarket-finder/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { initializeApp } from 'firebase/app';\n// import { getDatabase, ref, onValue, set } from 'firebase/database';\n// import './App.css';\n\n// // Firebase configuration\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyAUjjIy9Sd5r8T5nxIinHbcseCvNHKKag4\",\n//   authDomain: \"schoolbus-led.firebaseapp.com\",\n//   databaseURL: \"https://schoolbus-led-default-rtdb.firebaseio.com\",\n//   projectId: \"schoolbus-led\",\n//   storageBucket: \"schoolbus-led.appspot.com\",\n//   messagingSenderId: \"1056264797823\",\n//   appId: \"1:1056264797823:web:ab123cd456ef7890ghij\" // Replace with your app ID from Firebase project settings\n// };\n\n// // Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const database = getDatabase(app);\n\n// function App() {\n//   const [ledStatus, setLedStatus] = useState('OFF');\n\n//   useEffect(() => {\n//     const ledRef = ref(database, 'test-led1');\n\n//     const ledUnsubscribe = onValue(ledRef, (snapshot) => {\n//       const status = snapshot.val();\n//       setLedStatus(status);\n//     });\n\n//     return () => {\n//       ledUnsubscribe();\n//     };\n//   }, []);\n\n//   const toggleLed = () => {\n//     const newStatus = ledStatus === 'ON' ? 'OFF' : 'ON';\n//     set(ref(database, 'test-led1'), newStatus);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"status-text\">LED is {ledStatus}</h1>\n//       <div \n//         className={`switch ${ledStatus === 'ON' ? 'switch-on' : 'switch-off'}`} \n//         onClick={toggleLed}\n//       >\n//         <div className={`circle ${ledStatus === 'ON' ? 'circle-on' : 'circle-off'}`} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\nimport './App.css';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAUjjIy9Sd5r8T5nxIinHbcseCvNHKKag4\",\n  authDomain: \"schoolbus-led.firebaseapp.com\",\n  databaseURL: \"https://schoolbus-led-default-rtdb.firebaseio.com\",\n  projectId: \"schoolbus-led\",\n  storageBucket: \"schoolbus-led.appspot.com\",\n  messagingSenderId: \"1056264797823\",\n  appId: \"1:1056264797823:web:ab123cd456ef7890ghij\" // Replace with your app ID from Firebase project settings\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\nfunction App() {\n  const [ledStatus, setLedStatus] = useState('OFF');\n  const [authStatus, setAuthStatus] = useState('Not Authenticated');\n  const [isScanning, setIsScanning] = useState(false);\n\n  useEffect(() => {\n    const ledRef = ref(database, 'test-led1');\n\n    const ledUnsubscribe = onValue(ledRef, (snapshot) => {\n      const status = snapshot.val();\n      setLedStatus(status);\n    });\n\n    return () => {\n      ledUnsubscribe();\n    };\n  }, []);\n\n  const toggleLed = () => {\n    const newStatus = ledStatus === 'ON' ? 'OFF' : 'ON';\n    set(ref(database, 'test-led1'), newStatus);\n  };\n\n  const handleRFIDScan = () => {\n    setIsScanning(true);\n    // Simulate RFID scanning process\n    // In a real application, you would interact with a backend or device to handle RFID scanning\n    setTimeout(() => {\n      // Simulate an authenticated RFID tag\n      const simulatedUID = '12345678'; // Example UID\n\n      // Check RFID authentication (this should be handled by your backend or device in a real application)\n      authenticateRFID(simulatedUID);\n    }, 3000); // Simulate scanning delay\n  };\n\n  const authenticateRFID = (uid) => {\n    // Simulate authentication process\n    const acceptedUIDs = ['12345678', '87654321']; // Example accepted UIDs\n\n    if (acceptedUIDs.includes(uid)) {\n      setAuthStatus('Authenticated');\n    } else {\n      setAuthStatus('Authentication Failed');\n    }\n\n    setIsScanning(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"status-text\">LED is {ledStatus}</h1>\n      <div \n        className={`switch ${ledStatus === 'ON' ? 'switch-on' : 'switch-off'}`} \n        onClick={toggleLed}\n      >\n        <div className={`circle ${ledStatus === 'ON' ? 'circle-on' : 'circle-off'}`} />\n      </div>\n      <button onClick={handleRFIDScan}>\n        {isScanning ? 'Scanning...' : 'Scan RFID'}\n      </button>\n      <p>{authStatus}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}