{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arvind\\\\Documents\\\\code\\\\itemfinder\\\\part3\\\\supermarket-finder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\n\n// Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAUjjIy9Sd5r8T5nxIinHbcseCvNHKKag4\",\n  authDomain: \"schoolbus-led.firebaseapp.com\",\n  databaseURL: \"https://schoolbus-led-default-rtdb.firebaseio.com\",\n  projectId: \"schoolbus-led\",\n  storageBucket: \"schoolbus-led.appspot.com\",\n  messagingSenderId: \"1056264797823\",\n  appId: \"YOUR_APP_ID\" // Replace with your app ID from Firebase project settings\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Firebase References\nconst ledRef = ref(database, '/test-led');\nconst rfidStatusRef = ref(database, '/rfid-status');\nconst App = () => {\n  _s();\n  const [ledStatus, setLedStatus] = useState(false); // Track LED state\n  const [rfidPrompt, setRfidPrompt] = useState(false); // Track if RFID prompt is needed\n  const [authorized, setAuthorized] = useState(false); // Track RFID authorization\n\n  // Function to toggle the LED\n  const toggleLed = () => {\n    // Set Firebase path to request RFID scan\n    set(rfidStatusRef, \"scan\");\n\n    // Show RFID prompt to the user\n    setRfidPrompt(true);\n\n    // Set LED status based on current state\n    setLedStatus(prevStatus => {\n      const newStatus = !prevStatus;\n      set(ledRef, newStatus ? 1 : 0); // Update LED status in Firebase\n      return newStatus;\n    });\n  };\n  useEffect(() => {\n    // Get initial LED status from Firebase\n    onValue(ledRef, snapshot => {\n      const data = snapshot.val();\n      setLedStatus(data === 1);\n    });\n\n    // Get RFID status from Firebase\n    const handleRfidStatus = onValue(rfidStatusRef, snapshot => {\n      const status = snapshot.val();\n      if (status === \"yes\") {\n        setAuthorized(true);\n        setRfidPrompt(false); // Hide RFID prompt\n      } else if (status === \"no\") {\n        setAuthorized(false);\n        setRfidPrompt(false); // Hide RFID prompt\n        alert('RFID Not Authorized');\n      }\n    });\n\n    // Clean up subscription on component unmount\n    return () => handleRfidStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RFID-LED Control Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleLed,\n      style: styles.button,\n      children: ledStatus ? 'Turn LED Off' : 'Turn LED On'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), rfidPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.rfidPrompt,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please scan your RFID card...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), authorized ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: \"RFID Authorized!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Waiting for RFID authorization...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n// Simple CSS-in-JS styles\n_s(App, \"8V8ooFvZ9uG3jU6DDvNoBUu/U9c=\");\n_c = App;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '50px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '18px',\n    cursor: 'pointer'\n  },\n  rfidPrompt: {\n    marginTop: '20px'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getDatabase","ref","set","onValue","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","ledRef","rfidStatusRef","App","_s","ledStatus","setLedStatus","rfidPrompt","setRfidPrompt","authorized","setAuthorized","toggleLed","prevStatus","newStatus","snapshot","data","val","handleRfidStatus","status","alert","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","button","color","_c","textAlign","padding","fontFamily","fontSize","cursor","marginTop","$RefreshReg$"],"sources":["C:/Users/Arvind/Documents/code/itemfinder/part3/supermarket-finder/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAUjjIy9Sd5r8T5nxIinHbcseCvNHKKag4\",\n  authDomain: \"schoolbus-led.firebaseapp.com\",\n  databaseURL: \"https://schoolbus-led-default-rtdb.firebaseio.com\",\n  projectId: \"schoolbus-led\",\n  storageBucket: \"schoolbus-led.appspot.com\",\n  messagingSenderId: \"1056264797823\",\n  appId: \"YOUR_APP_ID\" // Replace with your app ID from Firebase project settings\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Firebase References\nconst ledRef = ref(database, '/test-led');\nconst rfidStatusRef = ref(database, '/rfid-status');\n\nconst App = () => {\n  const [ledStatus, setLedStatus] = useState(false); // Track LED state\n  const [rfidPrompt, setRfidPrompt] = useState(false); // Track if RFID prompt is needed\n  const [authorized, setAuthorized] = useState(false); // Track RFID authorization\n\n  // Function to toggle the LED\n  const toggleLed = () => {\n    // Set Firebase path to request RFID scan\n    set(rfidStatusRef, \"scan\");\n\n    // Show RFID prompt to the user\n    setRfidPrompt(true);\n\n    // Set LED status based on current state\n    setLedStatus(prevStatus => {\n      const newStatus = !prevStatus;\n      set(ledRef, newStatus ? 1 : 0); // Update LED status in Firebase\n      return newStatus;\n    });\n  };\n\n  useEffect(() => {\n    // Get initial LED status from Firebase\n    onValue(ledRef, (snapshot) => {\n      const data = snapshot.val();\n      setLedStatus(data === 1);\n    });\n\n    // Get RFID status from Firebase\n    const handleRfidStatus = onValue(rfidStatusRef, (snapshot) => {\n      const status = snapshot.val();\n      if (status === \"yes\") {\n        setAuthorized(true);\n        setRfidPrompt(false); // Hide RFID prompt\n      } else if (status === \"no\") {\n        setAuthorized(false);\n        setRfidPrompt(false); // Hide RFID prompt\n        alert('RFID Not Authorized');\n      }\n    });\n\n    // Clean up subscription on component unmount\n    return () => handleRfidStatus();\n  }, []);\n\n  return (\n    <div style={styles.container}>\n      <h1>RFID-LED Control Panel</h1>\n\n      <button onClick={toggleLed} style={styles.button}>\n        {ledStatus ? 'Turn LED Off' : 'Turn LED On'}\n      </button>\n\n      {rfidPrompt && (\n        <div style={styles.rfidPrompt}>\n          <p>Please scan your RFID card...</p>\n          {authorized ? (\n            <p style={{ color: 'green' }}>RFID Authorized!</p>\n          ) : (\n            <p style={{ color: 'red' }}>Waiting for RFID authorization...</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Simple CSS-in-JS styles\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '50px',\n    fontFamily: 'Arial, sans-serif',\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '18px',\n    cursor: 'pointer',\n  },\n  rfidPrompt: {\n    marginTop: '20px',\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}